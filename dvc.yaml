stages:
  # stage 1 of pipeline : data ingestion
  data_ingestion:
    cmd: python src/cnnClassifier/pipeline/stage_01_data_ingestion.py # cmdline prompt to run the stage/file
    deps: # dependencies
      - src/cnnClassifier/pipeline/stage_01_data_ingestion.py # the file to be executed should also be added to it, since the "cmd" will be executed only if all the dependency files are available
      - config/config.yaml # config.yaml contains the data ingestion configuration
    outs:
      - artifacts/data_ingestion/Chest-CT-Scan-data

  # stage 2 of pipeline : Preparing the base model
  prepare_base_model:
    cmd: python src/cnnClassifier/pipeline/stage_02_prepare_base_model.py
    deps:
      - src/cnnClassifier/pipeline/stage_02_prepare_base_model.py
      - config/config.yaml
    params:
      - IMAGE_SIZE
      - INCLUDE_TOP
      - CLASSES
      - WEIGHTS
      - LEARNING_RATE
    outs:
      - artifacts/prepare_base_model

  # stage 3 of pipeline : Training th model
  training:
    cmd: python src/cnnClassifier/pipeline/stage_03_model_trainer.py
    deps:
      - src/cnnClassifier/pipeline/stage_03_model_trainer.py
      - config/config.yaml
      - artifacts/data_ingestion/Chest-CT-Scan-data
      - artifacts/prepare_base_model
    params:
      - IMAGE_SIZE
      - EPOCHS
      - BATCH_SIZE
      - AUGMENTATION
    outs:
      - artifacts/training/model.h5

  # stage 4 of pipeline : Model evaluation
  evaluation:
    cmd: python src/cnnClassifier/pipeline/stage_04_model_evaluation.py
    deps:
      - src/cnnClassifier/pipeline/stage_04_model_evaluation.py
      - config/config.yaml
      - artifacts/data_ingestion/Chest-CT-Scan-data
      - artifacts/training/model.h5
    params:
      - IMAGE_SIZE
      - BATCH_SIZE
    metrics:
      - scores.json:
          cache: false
